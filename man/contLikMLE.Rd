% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contLikMLE.R
\name{contLikMLE}
\alias{contLikMLE}
\title{contLikMLE}
\usage{
contLikMLE(nC, samples, popFreq, refData = NULL, condOrder = NULL,
  knownRef = NULL, xi = 0, prC = 0, nDone = 2, threshT = 50,
  fst = 0, lambda = 0, pXi = function(x) 1, delta = 1,
  kit = NULL, verbose = TRUE, maxIter = 100, knownRel = NULL,
  ibd = c(1, 0, 0), xiFW = 0, pXiFW = function(x) 1, seed = NULL,
  maxThreads = 32, steptol = 0.001)
}
\arguments{
\item{nC}{Number of contributors in model. Must be a constant.}

\item{samples}{A List with samples which for each samples has locus-list elements with list elements adata and hdata. 'adata' is a qualitative (allele) data vector and 'hdata' is a quantitative (peak heights) data vector.}

\item{popFreq}{A list of allele frequencies for a given population.}

\item{refData}{Reference objects with (2-size) allele-vector given in list element [[i]][[s]].}

\item{condOrder}{Specify conditioning references from refData (must be consistent order). For instance condOrder=(0,2,1,0) means that we restrict the model such that Ref2 and Ref3 are respectively conditioned as 2. contributor and 1. contributor in the model.}

\item{knownRef}{Specify known non-contributing references from refData (index). For instance knownRef=(1,2) means that reference 1 and 2 is known non-contributor in the hypothesis. This affectes coancestry correction.}

\item{xi}{A numeric giving stutter-ratio if it is known. Default is 0, meaning stutter is not used.}

\item{prC}{A numeric for allele drop-in probability. Can be a vector (must contain the marker names). Default is 0.}

\item{nDone}{Number of optimizations required providing equivalent results (same logLik value obtained)}

\item{threshT}{The detection threshold given. Used when considering probability of allele drop-outs. Can be a vector (must contain the marker names).}

\item{fst}{The co-ancestry coefficient. Can be a vector (must contain the marker names). Default is 0.}

\item{lambda}{Parameter in modeled peak height shifted exponential model. Can be a vector (must contain the marker names). Default is 0.}

\item{pXi}{Prior function for xi-parameter (stutter). Flat prior on [0,1] is default.}

\item{delta}{Scaling of variation of normal distribution when drawing random startpoints. Default is 1.}

\item{kit}{Used to model degradation. Must be one of the shortnames of kit: check getKit()}

\item{verbose}{Boolean whether printing optimization progress. Default is TRUE.}

\item{maxIter}{Maximum number of iterations for the optimization. Default is 100.}

\item{knownRel}{gives the index of the reference which the 1st unknown is related to.}

\item{ibd}{the identical by decent coefficients of the relationship (specifies the type of relationship)}

\item{xiFW}{A numeric giving FW stutter-ratio if it is known.Default is 0, meaning stutter is not used.}

\item{pXiFW}{Prior function for xiFW-parameter (FW stutter). Flat prior on [0,1] is default.}

\item{seed}{The user can set seed if wanted}

\item{maxThreads}{Maximum number of threads to be executed by the parallelization}

\item{steptol}{Argument used in the nlm function for faster return from the optimization (tradeoff is lower accuracy).}
}
\value{
ret A list(fit,model,nDone,delta,seed,prepareC) where fit is Maximixed likelihood elements for given model.
}
\description{
contLikMLE optimizes the likelihood function of the DNA mixture model
}
\details{
Function calls the likelihood function implemented in C++ which uses the package Boost and paralellisation using OpenMP
}
\examples{
\dontrun{
kit = "ESX17"
sep0 = .Platform$file.sep
AT0 = 50
popfn = paste(path.package("euroformix"),"FreqDatabases",paste0(kit,"_Norway.csv"),sep=sep0)
evidfn = paste(path.package("euroformix"),"examples",paste0(kit,"_3p.csv"),sep=sep0)
reffn = paste(path.package("euroformix"),"examples",paste0(kit,"_refs.csv"),sep=sep0)
popFreq = freqImport(popfn)[[1]] #obtain list with population frequencies
samples = sample_tableToList(tableReader(evidfn))
refData = sample_tableToList(tableReader(reffn))
dat = prepareData(samples,refData=refData,popFreq=popFreq,threshT=AT) #obtain data to use for analysis
plotEPG2(dat$samples,dat$refData,kit=kit,AT=AT0)
mlefit = contLikMLE(3,dat$samples,dat$popFreq,dat$refData,1:3,kit=kit,xi=NULL,prC=0.05,lambda=0.01,seed=1)
}
}
\author{
Oyvind Bleka
}
